import{_ as c,o as i,c as l,a as n,b as a,w as e,d as s,e as u,r as o}from"./app.5e992d15.js";const r={},d=n("h1",{id:"authentication",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#authentication","aria-hidden":"true"},"#"),s(" Authentication")],-1),k=s("Once you have "),v=s("installed"),m=s(" the plugin, here is a conventional Vue.js v3.x "),_={href:"https://vuejs.org/guide/essentials/component-basics.html",target:"_blank",rel:"noopener noreferrer"},h=s("component"),g=s(" that displays a login or logout button based on a detected authenticated state."),b=u(`<h3 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useGapi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-gapi&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> gapi <span class="token operator">=</span> <span class="token function">useGapi</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// (1) Subscribe to authentication status changes</span>
    <span class="token keyword">const</span> isSignedIn <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    gapi<span class="token punctuation">.</span><span class="token function">listenUserSignIn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      isSignedIn<span class="token punctuation">.</span>value <span class="token operator">=</span> value
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// (2) Display authenticated user name</span>
    <span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> user <span class="token operator">=</span> gapi<span class="token punctuation">.</span><span class="token function">getUserData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

      <span class="token keyword">return</span> user <span class="token operator">?</span> user<span class="token punctuation">.</span>firstName <span class="token operator">:</span> <span class="token keyword">undefined</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// (3) Expose $gapi methods</span>
    <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      gapi<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> currentUser<span class="token punctuation">,</span> gapi<span class="token punctuation">,</span> hasGrantedScopes <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">{</span> currentUser<span class="token punctuation">,</span> gapi<span class="token punctuation">,</span> hasGrantedScopes <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      gapi<span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      isSignedIn<span class="token punctuation">,</span>
      userName<span class="token punctuation">,</span>
      login<span class="token punctuation">,</span>
      logout<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;#login-template&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="template" tabindex="-1"><a class="header-anchor" href="#template" aria-hidden="true">#</a> Template</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/x-template<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login-template<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;isSignedIn&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">&quot;logout()&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span><span class="token operator">&gt;</span>Logout<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token punctuation">{</span><span class="token punctuation">{</span> userName <span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>button
      <span class="token operator">:</span>disabled<span class="token operator">=</span><span class="token string">&quot;isSignedIn === null&quot;</span>
      @click<span class="token operator">=</span><span class="token string">&quot;login()&quot;</span>
      type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span>
      v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;!isSignedIn&quot;</span>
    <span class="token operator">&gt;</span>
      Login
    <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f=s("Subscribe to authentication status changes via "),y=n("code",null,"listenUserSignIn",-1),x=s("."),S=s("Expose "),w=n("code",null,"login",-1),q=s(" and "),G=n("code",null,"logout",-1),I=s(" methods."),E=s("Most "),j=n("code",null,"$gapi",-1),A=s(" methods return a promise. See the "),N=n("code",null,"GoogleAuthService",-1),U=s(" reference documentation"),L=s(" for more details."),D=s("Display the authenticated user's name via "),V=n("code",null,"getUserData",-1),B=s("."),C=s("See the "),R=n("code",null,"UserData",-1),T=s(" reference documentation"),$=s(" for a full list of user object properties which are persisted in local storage in practice.");function M(O,z){const t=o("RouterLink"),p=o("ExternalLinkIcon");return i(),l("div",null,[d,n("p",null,[k,a(t,{to:"/#usage"},{default:e(()=>[v]),_:1}),m,n("a",_,[h,a(p)]),g]),b,n("ol",null,[n("li",null,[n("p",null,[f,a(t,{to:"/reference/GoogleAuthService/__index__.html#listenusersignin-callback-%E2%87%92-promise-void"},{default:e(()=>[y]),_:1}),x])]),n("li",null,[n("p",null,[S,a(t,{to:"/reference/GoogleAuthService/__index__.html#login-options-%E2%87%92-promise-loginresponse"},{default:e(()=>[w]),_:1}),q,a(t,{to:"/reference/GoogleAuthService/__index__.html#logout-%E2%87%92-promise"},{default:e(()=>[G]),_:1}),I]),n("p",null,[n("em",null,[E,j,A,a(t,{to:"/reference/GoogleAuthService/__index__.html#googleauthservice"},{default:e(()=>[N,U]),_:1}),L])])]),n("li",null,[n("p",null,[D,a(t,{to:"/reference/GoogleAuthService/__index__.html#getuserdata-%E2%87%92-userdata-null"},{default:e(()=>[V]),_:1}),B]),n("p",null,[n("em",null,[C,a(t,{to:"/reference/GoogleAuthService/__index__.html#userdata-object"},{default:e(()=>[R,T]),_:1}),$])])])])])}var H=c(r,[["render",M],["__file","authentication.html.vue"]]);export{H as default};
