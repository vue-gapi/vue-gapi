import{_ as r,o as i,c as a,a as e,b as n,e as s,d as t,r as l}from"./app.5e992d15.js";const c={},d=s('<h1 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> <strong>index</strong></h1><p><a name="GoogleAuthService"></a></p><h2 id="googleauthservice" tabindex="-1"><a class="header-anchor" href="#googleauthservice" aria-hidden="true">#</a> GoogleAuthService</h2><ul><li><a href="#GoogleAuthService">GoogleAuthService</a><ul><li><a href="#new_GoogleAuthService_new">new GoogleAuthService()</a></li><li><a href="#GoogleAuthService+getGapiClient">.getGapiClient()</a> \u21D2 <a href="#GoogleAuthService+gapi"><code>Promise.&lt;gapi&gt;</code></a></li><li><a href="#GoogleAuthService+getAuthInstance">.getAuthInstance()</a> \u21D2 <a href="#GoogleAuthService+GoogleAuth"><code>Promise.&lt;GoogleAuth&gt;</code></a></li><li><a href="#GoogleAuthService+getCurrentUser">.getCurrentUser()</a> \u21D2 <a href="#GoogleAuthService+GoogleUser"><code>Promise.&lt;GoogleUser&gt;</code></a></li><li><a href="#GoogleAuthService+getOfflineAccessCode">.getOfflineAccessCode()</a> \u21D2 <code>string</code> | <code>null</code></li><li><a href="#GoogleAuthService+grantOfflineAccess">.grantOfflineAccess()</a> \u21D2 <code>Promise.&lt;string&gt;</code></li><li><a href="#GoogleAuthService+login">.login([options])</a> \u21D2 <a href="#GoogleAuthService+LoginResponse"><code>Promise.&lt;LoginResponse&gt;</code></a></li><li><a href="#GoogleAuthService+refreshToken">.refreshToken()</a> \u21D2 <code>Promise.&lt;AuthResponse&gt;</code></li><li><a href="#GoogleAuthService+grant">.grant()</a> \u21D2 <a href="#GoogleAuthService+GoogleUser"><code>Promise.&lt;GoogleUser&gt;</code></a></li><li><a href="#GoogleAuthService+logout">.logout()</a> \u21D2 <code>Promise</code></li><li><a href="#GoogleAuthService+isAuthenticated">.isAuthenticated()</a> \u21D2 <code>boolean</code></li><li><a href="#GoogleAuthService+isSignedIn">.isSignedIn()</a> \u21D2 <code>Promise.&lt;boolean&gt;</code></li><li><a href="#GoogleAuthService+listenUserSignIn">.listenUserSignIn(callback)</a> \u21D2 <code>Promise.&lt;void&gt;</code></li><li><a href="#GoogleAuthService+getUserData">.getUserData()</a> \u21D2 <a href="#GoogleAuthService+UserData"><code>UserData</code></a> | <code>null</code></li><li><a href="#GoogleAuthService+gapi">.gapi</a></li><li><a href="#GoogleAuthService+GoogleAuth">.GoogleAuth</a></li><li><a href="#GoogleAuthService+GoogleUser">.GoogleUser</a></li><li><a href="#GoogleAuthService+LoginOptions">.LoginOptions</a></li><li><a href="#GoogleAuthService+LoginResponse">.LoginResponse</a></li><li><a href="#GoogleAuthService+UserData">.UserData</a> : <code>object</code></li></ul></li></ul><p><a name="new_GoogleAuthService_new"></a></p><h3 id="new-googleauthservice" tabindex="-1"><a class="header-anchor" href="#new-googleauthservice" aria-hidden="true">#</a> new GoogleAuthService()</h3>',6),h=t("Exposed as a "),g=e("code",null,"$gapi",-1),u=t(),p={href:"https://vuejs.org/api/application.html#app-config-globalproperties",target:"_blank",rel:"noopener noreferrer"},_=t("global property"),f=t(" accessible inside the application."),b=s('<p><a name="GoogleAuthService+getGapiClient"></a></p><h3 id="getgapiclient-\u21D2-promise-gapi" tabindex="-1"><a class="header-anchor" href="#getgapiclient-\u21D2-promise-gapi" aria-hidden="true">#</a> .getGapiClient() \u21D2 <a href="#GoogleAuthService+gapi"><code>Promise.&lt;gapi&gt;</code></a></h3><p>Returns an initialized <a href="#GoogleAuthService+gapi">gapi</a> client.</p>',3),m=e("strong",null,"See",-1),A=t(": "),v={href:"https://github.com/google/google-api-javascript-client/blob/master/docs/start.md",target:"_blank",rel:"noopener noreferrer"},G=t("https://github.com/google/google-api-javascript-client/blob/master/docs/start.md"),S=e("br",null,null,-1),k=e("a",{name:"GoogleAuthService+getAuthInstance"},null,-1),U=e("h3",{id:"getauthinstance-\u21D2-promise-googleauth",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getauthinstance-\u21D2-promise-googleauth","aria-hidden":"true"},"#"),t(" .getAuthInstance() \u21D2 "),e("a",{href:"#GoogleAuthService+GoogleAuth"},[e("code",null,"Promise.<GoogleAuth>")])],-1),x=e("p",null,[t("Returns the "),e("a",{href:"#GoogleAuthService+GoogleAuth"},"GoogleAuth"),t(" object.")],-1),y=e("strong",null,"See",-1),w=t(": "),P={href:"https://developers.google.com/identity/sign-in/web/reference#gapiauth2getauthinstance",target:"_blank",rel:"noopener noreferrer"},O=t("gapi.auth2.getAuthInstance"),I=e("br",null,null,-1),D=e("strong",null,"Since",-1),C=t(": 1.0.0"),R=e("br",null,null,-1),L=e("a",{name:"GoogleAuthService+getCurrentUser"},null,-1),j=e("h3",{id:"getcurrentuser-\u21D2-promise-googleuser",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getcurrentuser-\u21D2-promise-googleuser","aria-hidden":"true"},"#"),t(" .getCurrentUser() \u21D2 "),e("a",{href:"#GoogleAuthService+GoogleUser"},[e("code",null,"Promise.<GoogleUser>")])],-1),T=e("p",null,[t("Returns a "),e("a",{href:"#GoogleAuthService+GoogleUser"},"GoogleUser"),t(" object that represents the current user.")],-1),N=e("strong",null,"See",-1),z=t(": "),E={href:"https://developers.google.com/identity/sign-in/web/reference#googleauthcurrentuserget",target:"_blank",rel:"noopener noreferrer"},B=t("GoogleAuth.currentUser.get"),V=e("br",null,null,-1),q=e("strong",null,"Since",-1),$=t(": 1.0.0"),F=e("br",null,null,-1),H=e("a",{name:"GoogleAuthService+getOfflineAccessCode"},null,-1),J=s('<h3 id="getofflineaccesscode-\u21D2-string-null" tabindex="-1"><a class="header-anchor" href="#getofflineaccesscode-\u21D2-string-null" aria-hidden="true">#</a> .getOfflineAccessCode() \u21D2 <code>string</code> | <code>null</code></h3><p>Returns the authorization code set via <a href="#GoogleAuthService+grantOfflineAccess">grantOfflineAccess</a>.</p><p><a name="GoogleAuthService+grantOfflineAccess"></a></p><h3 id="grantofflineaccess-\u21D2-promise-string" tabindex="-1"><a class="header-anchor" href="#grantofflineaccess-\u21D2-promise-string" aria-hidden="true">#</a> .grantOfflineAccess() \u21D2 <code>Promise.&lt;string&gt;</code></h3><p>Get permission from the user to access the specified scopes offline.</p>',5),K=e("strong",null,"Returns",-1),M=t(": "),Q=e("code",null,"Promise.<string>",-1),W=t(" - authorization code"),X=e("br",null,null,-1),Y=e("strong",null,"See",-1),Z=t(": "),ee={href:"https://developers.google.com/identity/sign-in/web/reference#googleauthgrantofflineaccessoptions",target:"_blank",rel:"noopener noreferrer"},te=t("GoogleAuth.grantOfflineAccess"),oe=e("br",null,null,-1),ne=e("a",{name:"GoogleAuthService+login"},null,-1),se=e("h3",{id:"login-options-\u21D2-promise-loginresponse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#login-options-\u21D2-promise-loginresponse","aria-hidden":"true"},"#"),t(" .login([options]) \u21D2 "),e("a",{href:"#GoogleAuthService+LoginResponse"},[e("code",null,"Promise.<LoginResponse>")])],-1),re=e("p",null,"Signs in the user and initializes session.",-1),ie=e("strong",null,"See",-1),ae=t(": "),le={href:"https://developers.google.com/identity/sign-in/web/reference#googleauthsignin",target:"_blank",rel:"noopener noreferrer"},ce=t("GoogleAuth.signIn"),de=s('<table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>[options]</td><td><a href="#GoogleAuthService+LoginOptions"><code>LoginOptions</code></a></td></tr></tbody></table><p><a name="GoogleAuthService+refreshToken"></a></p><h3 id="refreshtoken-\u21D2-promise-authresponse" tabindex="-1"><a class="header-anchor" href="#refreshtoken-\u21D2-promise-authresponse" aria-hidden="true">#</a> .refreshToken() \u21D2 <code>Promise.&lt;AuthResponse&gt;</code></h3><p>Forces a refresh of the access token.</p><p>This should be placed in your App.vue on the created page and run on a timer of 45min.</p>',5),he=e("strong",null,"See",-1),ge=t(": "),ue={href:"https://developers.google.com/identity/sign-in/web/reference#googleuserreloadauthresponse",target:"_blank",rel:"noopener noreferrer"},pe=t("GoogleUser.reloadAuthResponse"),_e=e("br",null,null,-1),fe=e("strong",null,"Example",-1),be=s(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// NOTE: 45min refresh policy is what google recommends</span>
window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$gapi<span class="token punctuation">.</span><span class="token function">refreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2.7e+6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="GoogleAuthService+grant"></a></p><h3 id="grant-\u21D2-promise-googleuser" tabindex="-1"><a class="header-anchor" href="#grant-\u21D2-promise-googleuser" aria-hidden="true">#</a> .grant() \u21D2 <a href="#GoogleAuthService+GoogleUser"><code>Promise.&lt;GoogleUser&gt;</code></a></h3><p>Ask to grant scopes from user.</p>`,4),me=e("strong",null,"See",-1),Ae=t(": "),ve={href:"https://developers.google.com/identity/sign-in/web/reference#googleusergrantoptions",target:"_blank",rel:"noopener noreferrer"},Ge=t("GoogleUser.grant"),Se=e("br",null,null,-1),ke=e("strong",null,"Since",-1),Ue=t(": 0.4.0"),xe=e("br",null,null,-1),ye=e("a",{name:"GoogleAuthService+logout"},null,-1),we=e("h3",{id:"logout-\u21D2-promise",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#logout-\u21D2-promise","aria-hidden":"true"},"#"),t(" .logout() \u21D2 "),e("code",null,"Promise")],-1),Pe=e("p",null,"Signs out the current account from the application and clear session storage.",-1),Oe=e("strong",null,"See",-1),Ie=t(": "),De={href:"https://developers.google.com/identity/sign-in/web/reference#googleauthsignout",target:"_blank",rel:"noopener noreferrer"},Ce=t("GoogleAuth.signOut"),Re=e("br",null,null,-1),Le=e("a",{name:"GoogleAuthService+isAuthenticated"},null,-1),je=s('<h3 id="isauthenticated-\u21D2-boolean" tabindex="-1"><a class="header-anchor" href="#isauthenticated-\u21D2-boolean" aria-hidden="true">#</a> .isAuthenticated() \u21D2 <code>boolean</code></h3><p>Determines if the user is signed in via local storage.</p><p><strong>Since</strong>: 0.0.10<br><a name="GoogleAuthService+isSignedIn"></a></p><h3 id="issignedin-\u21D2-promise-boolean" tabindex="-1"><a class="header-anchor" href="#issignedin-\u21D2-promise-boolean" aria-hidden="true">#</a> .isSignedIn() \u21D2 <code>Promise.&lt;boolean&gt;</code></h3><p>Determines if the user is signed in via Google.</p>',5),Te=e("strong",null,"See",-1),Ne=t(": "),ze={href:"https://developers.google.com/identity/sign-in/web/reference#googleuserissignedin",target:"_blank",rel:"noopener noreferrer"},Ee=t("GoogleUser.isSignedIn"),Be=e("br",null,null,-1),Ve=e("strong",null,"Since",-1),qe=t(": 0.0.10"),$e=e("br",null,null,-1),Fe=e("a",{name:"GoogleAuthService+listenUserSignIn"},null,-1),He=e("h3",{id:"listenusersignin-callback-\u21D2-promise-void",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#listenusersignin-callback-\u21D2-promise-void","aria-hidden":"true"},"#"),t(" .listenUserSignIn(callback) \u21D2 "),e("code",null,"Promise.<void>")],-1),Je=e("p",null,"Accept the callback to be notified when the authentication status changes.",-1),Ke=e("strong",null,"See",-1),Me=t(": "),Qe={href:"https://developers.google.com/identity/sign-in/web/reference#googleauthissignedinlistenlistener",target:"_blank",rel:"noopener noreferrer"},We=t("GoogleAuth.isSignedIn.listen"),Xe=e("br",null,null,-1),Ye=e("strong",null,"Since",-1),Ze=t(": 0.0.10"),et=s('<table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>callback</td><td><code>function</code></td><td>the callback function to be notified of an authentication status change</td></tr></tbody></table><p><a name="GoogleAuthService+getUserData"></a></p><h3 id="getuserdata-\u21D2-userdata-null" tabindex="-1"><a class="header-anchor" href="#getuserdata-\u21D2-userdata-null" aria-hidden="true">#</a> .getUserData() \u21D2 <a href="#GoogleAuthService+UserData"><code>UserData</code></a> | <code>null</code></h3><p>Gets the user data from local storage</p><p><strong>Since</strong>: 0.0.10<br><a name="GoogleAuthService+gapi"></a></p><h3 id="gapi" tabindex="-1"><a class="header-anchor" href="#gapi" aria-hidden="true">#</a> .gapi</h3><p>Google API Client.</p>',7),tt=e("strong",null,"See",-1),ot=t(": "),nt={href:"https://github.com/google/google-api-javascript-client",target:"_blank",rel:"noopener noreferrer"},st=t("https://github.com/google/google-api-javascript-client"),rt=e("br",null,null,-1),it=e("a",{name:"GoogleAuthService+GoogleAuth"},null,-1),at=e("h3",{id:"googleauth",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#googleauth","aria-hidden":"true"},"#"),t(" .GoogleAuth")],-1),lt=e("p",null,"Singleton class that provides methods to allow the user to sign in with a Google account, get the user's current sign-in status, get specific data from the user's Google profile, request additional scopes, and sign out from the current account.",-1),ct=e("strong",null,"See",-1),dt=t(": "),ht={href:"https://developers.google.com/identity/sign-in/web/reference#authentication",target:"_blank",rel:"noopener noreferrer"},gt=t("https://developers.google.com/identity/sign-in/web/reference#authentication"),ut=e("br",null,null,-1),pt=e("a",{name:"GoogleAuthService+GoogleUser"},null,-1),_t=e("h3",{id:"googleuser",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#googleuser","aria-hidden":"true"},"#"),t(" .GoogleUser")],-1),ft=e("p",null,"Object that represents the current user.",-1),bt=e("strong",null,"See",-1),mt=t(": "),At={href:"https://developers.google.com/identity/sign-in/web/reference#googleusergetid",target:"_blank",rel:"noopener noreferrer"},vt=t("https://developers.google.com/identity/sign-in/web/reference#googleusergetid"),Gt=e("br",null,null,-1),St=e("a",{name:"GoogleAuthService+LoginOptions"},null,-1),kt=s('<h3 id="loginoptions" tabindex="-1"><a class="header-anchor" href="#loginoptions" aria-hidden="true">#</a> .LoginOptions</h3><p><strong>Properties</strong></p><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[grantOfflineAccess]</td><td><code>boolean</code></td><td><code>false</code></td><td>Additionally gets permission from the user to access the specified scopes offline via <a href="#GoogleAuthService+getOfflineAccessCode">getOfflineAccessCode</a></td></tr></tbody></table><p><a name="GoogleAuthService+LoginResponse"></a></p><h3 id="loginresponse" tabindex="-1"><a class="header-anchor" href="#loginresponse" aria-hidden="true">#</a> .LoginResponse</h3><p><strong>Properties</strong></p><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>currentUser</td><td><code>GoogleUser</code></td><td>Current user</td></tr><tr><td>gapi</td><td><code>gapi</code></td><td>Initialized <a href="gapi">gapi</a> client</td></tr><tr><td>hasGrantedScopes</td><td><code>boolean</code></td><td><code>true</code> if the requested scopes were granted.</td></tr><tr><td>[code]</td><td><code>string</code></td><td>Authorization code if <code>grantOfflineAccess: true</code></td></tr></tbody></table><p><a name="GoogleAuthService+UserData"></a></p><h3 id="userdata-object" tabindex="-1"><a class="header-anchor" href="#userdata-object" aria-hidden="true">#</a> .UserData : <code>object</code></h3><p><strong>See</strong></p>',10),Ut={href:"https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse",target:"_blank",rel:"noopener noreferrer"},xt=t("gapi.auth2.AuthResponse"),yt={href:"https://developers.google.com/identity/sign-in/web/reference#googleusergetbasicprofile",target:"_blank",rel:"noopener noreferrer"},wt=t("GoogleUser.getBasicProfile"),Pt=s("<p><strong>Properties</strong></p><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td><code>string</code></td><td>user&#39;s unique ID string</td></tr><tr><td>firstName</td><td><code>string</code></td><td>given name</td></tr><tr><td>lastName</td><td><code>string</code></td><td>family name</td></tr><tr><td>fullName</td><td><code>string</code></td><td>full name</td></tr><tr><td>email</td><td><code>string</code></td><td></td></tr><tr><td>imageUrl</td><td><code>string</code></td><td></td></tr><tr><td>expiresAt</td><td><code>number</code></td><td></td></tr><tr><td>accessToken</td><td><code>string</code></td><td>granted access token</td></tr><tr><td>idToken</td><td><code>string</code></td><td>granted ID token</td></tr><tr><td>[offlineAccessCode]</td><td><code>string</code></td><td></td></tr></tbody></table>",2);function Ot(It,Dt){const o=l("ExternalLinkIcon");return i(),a("div",null,[d,e("p",null,[h,g,u,e("a",p,[_,n(o)]),f]),b,e("p",null,[m,A,e("a",v,[G,n(o)]),S,k]),U,x,e("p",null,[y,w,e("a",P,[O,n(o)]),I,D,C,R,L]),j,T,e("p",null,[N,z,e("a",E,[B,n(o)]),V,q,$,F,H]),J,e("p",null,[K,M,Q,W,X,Y,Z,e("a",ee,[te,n(o)]),oe,ne]),se,re,e("p",null,[ie,ae,e("a",le,[ce,n(o)])]),de,e("p",null,[he,ge,e("a",ue,[pe,n(o)]),_e,fe]),be,e("p",null,[me,Ae,e("a",ve,[Ge,n(o)]),Se,ke,Ue,xe,ye]),we,Pe,e("p",null,[Oe,Ie,e("a",De,[Ce,n(o)]),Re,Le]),je,e("p",null,[Te,Ne,e("a",ze,[Ee,n(o)]),Be,Ve,qe,$e,Fe]),He,Je,e("p",null,[Ke,Me,e("a",Qe,[We,n(o)]),Xe,Ye,Ze]),et,e("p",null,[tt,ot,e("a",nt,[st,n(o)]),rt,it]),at,lt,e("p",null,[ct,dt,e("a",ht,[gt,n(o)]),ut,pt]),_t,ft,e("p",null,[bt,mt,e("a",At,[vt,n(o)]),Gt,St]),kt,e("ul",null,[e("li",null,[e("a",Ut,[xt,n(o)])]),e("li",null,[e("a",yt,[wt,n(o)])])]),Pt])}var Rt=r(c,[["render",Ot],["__file","__index__.html.vue"]]);export{Rt as default};
